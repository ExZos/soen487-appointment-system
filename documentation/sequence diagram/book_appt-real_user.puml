@startuml

participant "Real User" order 1
participant Frontend order 2
participant Axios order 3
participant UserRest order 4
participant AppointmentRest order 5
participant ResourceRest order 6
participant IUserManager order 7
participant IAppointmentManager order 8
participant IResourceManager order 9
participant ICalendarAPIManager order 10
participant UserDAO order 11
participant AppointmentDAO order 12
participant ResourceDAO order 13
participant "Google Calendar Service" order 14

"Real User" <- Frontend: Retrieve\nsession variables
Activate "Real User"
Activate Frontend

Frontend -> Axios: Authenticate user
Activate Axios

Axios -> UserRest: POST request
Activate UserRest

UserRest -> IUserManager: validateToken(email, token)
Activate IUserManager

IUserManager -> UserDAO: getUserByEmail(email)
Activate UserDAO

IUserManager <-- UserDAO: User
Deactivate UserDAO

IUserManager -> IUserManager: Validate token

UserRest <-- IUserManager: boolean
Deactivate IUserManager

Axios <-- UserRest: 200 HttpResponse
Deactivate UserRest

alt user is authenticated
    Frontend <-- Axios: True
    Deactivate Axios

    Frontend -> Axios: Get resources
    Activate Axios

    Axios -> ResourceRest: GET request
    Activate ResourceRest

    ResourceRest -> IUserManager: validateToken(email, token)
    Activate IUserManager

    IUserManager -> UserDAO: getUserByEmail(email)
    Activate UserDAO

    IUserManager <-- UserDAO: User
    Deactivate UserDAO

    IUserManager -> IUserManager: Validate token

    alt token is valid
        ResourceRest <-- IUserManager: True
        ResourceRest -> IResourceManager: getResourceList()
        Activate IResourceManager

        IResourceManager -> ResourceDAO: getResourceList()
        Activate ResourceDAO

        IResourceManager <-- ResourceDAO: Resources
        Deactivate ResourceDAO

        ResourceRest <-- IResourceManager: Resources
        Deactivate IResourceManager

        Axios <-- ResourceRest: 200 HttpResponse

        Frontend <-- Axios: Resources
        Deactivate Axios

        "Real User" <- Frontend: Display resources
        Deactivate Frontend

        "Real User" -> Frontend: Select resource
        Activate Frontend

        Frontend -> Axios: Get open\nappointments\nfor resource
        Activate Axios

        Axios -> AppointmentRest: GET request
        Activate AppointmentRest

        AppointmentRest -> IUserManager: validateToken(email, token)
        Activate IUserManager

        IUserManager -> UserDAO: getUserByEmail(email)
        Activate UserDAO

        IUserManager <-- UserDAO: User
        Deactivate UserDAO

        IUserManager -> IUserManager: Validate token

        alt token is valid
            AppointmentRest <-- IUserManager: True
            AppointmentRest -> IAppointmentManager: getOpenResourceAppointments(resourceId)
            Activate IAppointmentManager

            IAppointmentManager -> AppointmentDAO: getOpenResourceAppointments(resourceId)
            Activate AppointmentDAO

            IAppointmentManager <-- AppointmentDAO: Open appointments for resource
            Deactivate AppointmentDAO

            AppointmentRest <-- IAppointmentManager: Open appointments for resource
            Deactivate IAppointmentManager

            Axios <-- AppointmentRest: 200 HttpResponse
            Deactivate AppointmentRest

            Frontend <-- Axios: Open appointments\nfor resource
            Deactivate Axios

            "Real User" <- Frontend: Display open\nappointments\nfor resource
            Deactivate Frontend

            "Real User" -> "Real User": Select appointment

            alt
                "Real User" -> "Real User": Enter\noptional message
            end

            "Real User" -> Frontend: Submit
            Activate Frontend

            Frontend -> Axios: Book appointment
            Activate Axios

            Axios -> AppointmentRest: POST request
            Activate AppointmentRest

            AppointmentRest -> IUserManager: validateToken(email, token)
            Activate IUserManager

            IUserManager -> UserDAO: getUserByEmail(email)
            Activate UserDAO

            IUserManager <-- UserDAO: User
            Deactivate UserDAO

            IUserManager -> IUserManager: Validate token

            alt token is valid
                AppointmentRest <-- IUserManager: True
                AppointmentRest -> IAppointmentManager: getAppointment(appointmentId)
                Activate IAppointmentManager

                IAppointmentManager -> AppointmentDAO: getAppointment(appointmentId)
                Activate AppointmentDAO

                IAppointmentManager <-- AppointmentDAO: Appointment
                Deactivate AppointmentDAO

                AppointmentRest <-- IAppointmentManager: Appointment
                Deactivate IAppointmentManager

                AppointmentRest -> AppointmentRest: Check\nAppointment\nis open

                alt appointment is open
                    AppointmentRest -> IResourceManager: getResourceById(resourceId)
                    Activate IResourceManager

                    IResourceManager -> ResourceDAO: getResourceById(resourceId)
                    Activate ResourceDAO

                    IResourceManager <-- ResourceDAO: Resource
                    Deactivate ResourceDAO

                    AppointmentRest <-- IResourceManager: Resource
                    Deactivate IResourceManager

                    AppointmentRest -> IUserManager: getUserByEmail(email)

                    IUserManager -> UserDAO: selectUserByEmail(email)
                    Activate UserDAO

                    IUserManager <-- UserDAO: User
                    Deactivate UserDAO

                    AppointmentRest <-- IUserManager: User
                    AppointmentRest -> ICalendarAPIManager: createEventOnDate(token, resourceName, date)
                    Activate ICalendarAPIManager

                    ICalendarAPIManager -> ICalendarAPIManager: Build\nCalendar service
                    ICalendarAPIManager -> ICalendarAPIManager: Build Event
                    ICalendarAPIManager -> ICalendarAPIManager: Build Calendar\nservice request
                    ICalendarAPIManager -> "Google Calendar Service": Insert event
                    Activate "Google Calendar Service"

                    ICalendarAPIManager <-- "Google Calendar Service": Event
                    Deactivate "Google Calendar Service"

                    alt event was created
                        AppointmentRest <-- ICalendarAPIManager: True
                        AppointmentRest -> IAppointmentManager: book(appointmentId, userId, message)
                        Activate IAppointmentManager

                        IAppointmentManager -> AppointmentDAO: updateAppointment(appointmentId, userId, message, status)
                        Activate AppointmentDAO

                        IAppointmentManager <-- AppointmentDAO: Updated appointment id
                        Deactivate AppointmentDAO

                        IAppointmentManager -> AppointmentDAO: getAppointment(appointmentId)
                        Activate AppointmentDAO

                        IAppointmentManager <-- AppointmentDAO: Appointment
                        Deactivate AppointmentDAO

                        alt appointment was booked
                            AppointmentRest <-- IAppointmentManager: Booked appointment

                            Axios <-- AppointmentRest: 200 HttpResponse

                            Frontend <-- Axios: Booked appointment

                            "Real User" <- Frontend: Display\nbooking confirmation

                        else appointment was not booked
                            AppointmentRest <-- IAppointmentManager: null
                            Deactivate IAppointmentManager

                            Axios <-- AppointmentRest: 500 HttpResponse

                            Frontend <-- Axios: Exception

                            "Real User" <-- Frontend: Display\nerror alert

                        end

                    else event was not created
                        AppointmentRest <-- ICalendarAPIManager: False
                        Deactivate ICalendarAPIManager

                        Axios <-- AppointmentRest: 500 HttpResponse

                        Frontend <-- Axios: Exception

                        "Real User" <-- Frontend: Display\nerror alert
                    end

                else appointment is closed
                    Axios <-- AppointmentRest: 401 HttpResponse

                    Frontend <-- Axios: Exception

                    "Real User" <- Frontend: Display\nerror alert
                end

            else token is not valid
                AppointmentRest <-- IUserManager: False
                Deactivate IUserManager

                Axios <-- AppointmentRest: 401 HttpResponse

                Frontend <-- Axios: Exception

                "Real User" <- Frontend: Redirect to\nlogin page
            end

        else token is not valid
            AppointmentRest <-- IUserManager: False
            Deactivate IUserManager

            Axios <-- AppointmentRest: 401 HttpResponse
            Deactivate AppointmentRest

            Frontend <-- Axios: Exception

            "Real User" <- Frontend: Redirect to\nlogin page
        end
    else token is not valid
        ResourceRest <-- IUserManager: False
        Deactivate IUserManager

        Axios <-- ResourceRest: 401 HttpResponse
        Deactivate ResourceRest

        Frontend <-- Axios: Exception

        "Real User" <- Frontend: Redirect to\nlogin page
    end

else user is not authenticated
    Frontend <-- Axios: False
    Deactivate Axios

    "Real User" <- Frontend: Redirect to\nlogin page
    Deactivate Frontend
end

Deactivate "Real User"

@enduml
